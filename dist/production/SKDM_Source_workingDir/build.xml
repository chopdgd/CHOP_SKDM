<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="SKDM_update" default="build" basedir=".">
    <description>Builds, tests, and runs the project HLAblaster.</description>

    <property name="svn.head.revision" value="1"/>
    <property name="src.dir" value="src"/>
    <property name="gui.dir" value="gui"/>
    <property name="build.dir" value="classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="doc.dir" value="doc"/>
    <property name="logs.dir" value="logs"/>
    <property name="dist.dir" value="dist"/>
    <property name="name" value="SKDM"/>
    <property name="version" value="2.1"/>
    <property name="hlaIcon" value="hla_icon.GIF"/>

    <path id="master-classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Remove old build files -->
    <target name="clean" description="Clean output directories">
        <mkdir dir="${build.dir}"/>
        <delete>
            <fileset dir="${build.dir}" includes="**/*.class"/>
            <fileset dir="${dist.dir}" />
        </delete>
        <delete file="${lib.dir}/${name}_${version}.jar" failonerror="true"/>
    </target>

    <!--Prepare for build -->
    <target name="prepare" description="Prepare for build">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${logs.dir}"/>
    </target>

    <!-- Compile all of our class files -->
    <target name="compile" depends="prepare" description="Compile .java files into .class files">
        <javac destdir="${build.dir}" target="1.8" includeantruntime="true" debug="true" deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>


    <target name="build" depends="compile" description="Compile main source tree java files and build war file">
        <!-- Create jar file with custom MANIFEST.FM -->
        <delete file="MANIFEST.MF"/>
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>

        <!-- Convert project class path to string property as required by MANIFEST.FM spec -->
        <pathconvert property="mf.classpath" pathsep=" " dirsep="/">
            <path refid="master-classpath" />
            <chainedmapper>
                <flattenmapper />
                <globmapper from="*.jar" to="lib/*.jar" />
            </chainedmapper>
        </pathconvert>

        <manifest file="MANIFEST.MF">
            <attribute name="Main-Class" value="src.gui.Window"/>
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
            <attribute name="Class-Path" value="${mf.classpath}"/>
            <attribute name="DGD-Svn-Revision" value="${svn.head.revision}"/>
            <attribute name="App-Version" value="SKDM_${version}"/>
        </manifest>

        <jar destfile="${lib.dir}/${name}_${version}.jar"
             manifest="MANIFEST.MF">
            <fileset dir="${build.dir}">
            </fileset>
            <fileset dir="">
                <include name="${src.dir}/${gui.dir}/hla_icon.*"/>
                <include name="${lib.dir}"/>
                <include name="${logs.dir}"/>
                <include name="${doc.dir}"/>
            </fileset>
        </jar>
        <delete file="MANIFEST.MF" failonerror="true"/>
    </target>


    <target name="dist" depends="build" description="Create distribution directory with files ready for deployment">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/${lib.dir}"/>
        <mkdir dir="${dist.dir}/${logs.dir}"/>
        <copy todir="${dist.dir}/${lib.dir}">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <move todir="${dist.dir}" file="${dist.dir}/${lib.dir}/${name}_${version}.jar"/>
    </target>

    <target name="clean+dist" depends="clean,dist" description="Clean and then build distribution" >
    </target>

    <target name="dist+docs" depends="dist" description="Create distribution with documentation" >
        <mkdir dir="docs"/>
        <javadoc
                destdir="docs/${name}"
                author="true"
                version="true"
                use="true"
                windowtitle="${name}">
            <classpath refid="master-classpath"/>
            <fileset dir="src" defaultexcludes="yes">
            </fileset>
        </javadoc>
    </target>

</project>
